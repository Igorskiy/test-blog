{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test-blog\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport { sendPostOnServer, getPostsFromServer } from '../../api';\nimport { setPostTitle, setPostBody, setPosts } from '../../store/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nconst New = () => {\n  const postsBody = useSelector(state => state.inputs.postBody);\n  const postsTitle = useSelector(state => state.inputs.postTitle);\n  const dispatch = useDispatch();\n\n  const addNewPost = async (title, body) => {\n    await sendPostOnServer(title, body);\n    dispatch(setPostBody(''));\n    dispatch(setPostTitle(''));\n    dispatch(setPosts((await getPostsFromServer())));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default New;\n\n__jsx(\"form\", {\n  className: classes.root,\n  noValidate: true,\n  autoComplete: \"off\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 36\n  },\n  __self: this\n}, __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 37\n  },\n  __self: this\n}, __jsx(TextField, {\n  id: \"outlined-multiline-flexible\",\n  label: \"Multiline\",\n  multiline: true,\n  rowsMax: \"4\",\n  defaultValue: postsBody,\n  onChange: e => dispatch(setPostBody(e.target.value)),\n  variant: \"outlined\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 38\n  },\n  __self: this\n}), __jsx(TextField, {\n  id: \"outlined-textarea\",\n  defaultValue: postsTitle,\n  placeholder: \"add name for your post\",\n  onChange: e => dispatch(setPostTitle(e.target.value)),\n  label: \"Multiline Placeholder\",\n  multiline: true,\n  variant: \"outlined\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 47\n  },\n  __self: this\n}), __jsx(Link, {\n  href: \"/\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 56\n  },\n  __self: this\n}, __jsx(Button, {\n  onClick: () => addNewPost(postsTitle, postsBody),\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 57\n  },\n  __self: this\n}, \"submit\"))));","map":{"version":3,"sources":["C:/projects/test-blog/pages/posts/new.tsx"],"names":["Layout","sendPostOnServer","getPostsFromServer","setPostTitle","setPostBody","setPosts","useSelector","useDispatch","Link","TextField","Button","New","postsBody","state","inputs","postBody","postsTitle","postTitle","dispatch","addNewPost","title","body","classes","root","e","target","value"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AAEA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,WAArD;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,QAApC,QAAoD,qBAApD;AACA,SAASC,WAAT,EAAsCC,WAAtC,QAAyD,aAAzD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,OAAOC,SAAP,MAAsB,6BAAtB;AACA,SAASC,MAAT,QAAuB,mBAAvB;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAGN,WAAW,CAC1BO,KAAD,IAA2BA,KAAK,CAACC,MAAN,CAAaC,QADb,CAA7B;AAGA,QAAMC,UAAU,GAAGV,WAAW,CAC3BO,KAAD,IAA2BA,KAAK,CAACC,MAAN,CAAaG,SADZ,CAA9B;AAGA,QAAMC,QAAQ,GAAGX,WAAW,EAA5B;;AAEA,QAAMY,UAAU,GAAG,OAAOC,KAAP,EAAsBC,IAAtB,KAAuC;AACxD,UAAMpB,gBAAgB,CAACmB,KAAD,EAAQC,IAAR,CAAtB;AACAH,IAAAA,QAAQ,CAACd,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAc,IAAAA,QAAQ,CAACf,YAAY,CAAC,EAAD,CAAb,CAAR;AACAe,IAAAA,QAAQ,CAACb,QAAQ,EAAC,MAAMH,kBAAkB,EAAzB,EAAT,CAAR;AACD,GALD;;AAOA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CArBD;;AAuBA,eAAeS,GAAf;;AAEA;AAAM,EAAA,SAAS,EAAEW,OAAO,CAACC,IAAzB;AAA+B,EAAA,UAAU,MAAzC;AAA0C,EAAA,YAAY,EAAC,KAAvD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,SAAD;AACE,EAAA,EAAE,EAAC,6BADL;AAEE,EAAA,KAAK,EAAC,WAFR;AAGE,EAAA,SAAS,MAHX;AAIE,EAAA,OAAO,EAAC,GAJV;AAKE,EAAA,YAAY,EAAEX,SALhB;AAME,EAAA,QAAQ,EAAEY,CAAC,IAAIN,QAAQ,CAACd,WAAW,CAACoB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CANzB;AAOE,EAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EADF,EAUE,MAAC,SAAD;AACE,EAAA,EAAE,EAAC,mBADL;AAEE,EAAA,YAAY,EAAEV,UAFhB;AAGE,EAAA,WAAW,EAAC,wBAHd;AAIE,EAAA,QAAQ,EAAEQ,CAAC,IAAIN,QAAQ,CAACf,YAAY,CAACqB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CAJzB;AAKE,EAAA,KAAK,EAAC,uBALR;AAME,EAAA,SAAS,MANX;AAOE,EAAA,OAAO,EAAC,UAPV;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,EAVF,EAmBE,MAAC,IAAD;AAAM,EAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE,MAAC,MAAD;AAAQ,EAAA,OAAO,EAAE,MAAMP,UAAU,CAACH,UAAD,EAAaJ,SAAb,CAAjC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,CAnBF,CADF","sourcesContent":["import Layout from '../../components/MyLayout';\nimport { NextPage } from 'next';\nimport { sendPostOnServer, getPostsFromServer } from '../../api';\nimport { setPostTitle, setPostBody, setPosts } from '../../store/actions';\nimport { useSelector, RootStateOrAny, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nconst New: NextPage = () => {\n  const postsBody = useSelector(\n    (state: RootStateOrAny) => state.inputs.postBody,\n  );\n  const postsTitle = useSelector(\n    (state: RootStateOrAny) => state.inputs.postTitle,\n  );\n  const dispatch = useDispatch();\n\n  const addNewPost = async (title: string, body: string) => {\n    await sendPostOnServer(title, body);\n    dispatch(setPostBody(''));\n    dispatch(setPostTitle(''));\n    dispatch(setPosts(await getPostsFromServer()));\n  };\n\n  return (\n    <Layout>\n\n    </Layout>\n  );\n};\n\nexport default New;\n\n<form className={classes.root} noValidate autoComplete=\"off\">\n  <div>\n    <TextField\n      id=\"outlined-multiline-flexible\"\n      label=\"Multiline\"\n      multiline\n      rowsMax=\"4\"\n      defaultValue={postsBody}\n      onChange={e => dispatch(setPostBody(e.target.value))}\n      variant=\"outlined\"\n    />\n    <TextField\n      id=\"outlined-textarea\"\n      defaultValue={postsTitle}\n      placeholder=\"add name for your post\"\n      onChange={e => dispatch(setPostTitle(e.target.value))}\n      label=\"Multiline Placeholder\"\n      multiline\n      variant=\"outlined\"\n    />\n    <Link href=\"/\">\n      <Button onClick={() => addNewPost(postsTitle, postsBody)}>submit</Button>\n    </Link>\n  </div>\n</form>;\n"]},"metadata":{},"sourceType":"module"}