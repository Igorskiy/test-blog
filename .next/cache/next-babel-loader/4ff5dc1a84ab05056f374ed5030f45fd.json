{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test-blog\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { getPostsFromServer, removePostFromServer } from '../api';\nimport { setPosts } from '../store/actions';\nimport { makeStyles, createStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nconst useStyles = makeStyles(theme => createStyles({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  }\n}));\n\nconst Index = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n  const posts = useSelector(state => state.posts.posts);\n\n  const getPosts = async () => {\n    dispatch(setPosts((await getPostsFromServer())));\n  };\n\n  const removePost = async id => {\n    await removePostFromServer(id);\n    getPosts();\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, __jsx(\"div\", {\n    className: classes.root,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45\n    },\n    __self: this\n  }, __jsx(Grid, {\n    container: true,\n    spacing: 3,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 46\n    },\n    __self: this\n  })));\n};\n\nIndex.getInitialProps = async ({\n  store\n}) => {\n  const data = await getPostsFromServer();\n  store.dispatch(setPosts(data));\n  return {\n    data\n  };\n};\n\nexport default Index;\n/* {posts.map((post: Post) => (\n  <div key={post.id}>\n    <div>\n      <span onClick={() => removePost(post.id)}>{`delete`}</span>\n      <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n        <a\n          onClick={async () =>\n            dispatch(setPost(await getPostFromServer(post.id)))\n          }\n        >\n          {post.title}\n        </a>\n      </Link>\n      {post.body}\n    </div>\n  </div> */","map":{"version":3,"sources":["C:/projects/test-blog/pages/index.tsx"],"names":["Layout","useSelector","useDispatch","getPostsFromServer","removePostFromServer","setPosts","makeStyles","createStyles","Grid","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","Index","classes","dispatch","posts","state","getPosts","removePost","id","getInitialProps","store","data"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,EAAsCC,WAAtC,QAAyD,aAAzD;AAGA,SAEEC,kBAFF,EAGEC,oBAHF,QAIO,QAJP;AAKA,SAASC,QAAT,QAAkC,kBAAlC;AAEA,SAASC,UAAT,EAAqBC,YAArB,QAAgD,0BAAhD;AAEA,OAAOC,IAAP,MAAiB,wBAAjB;AAEA,MAAMC,SAAS,GAAGH,UAAU,CAAEI,KAAD,IAC3BH,YAAY,CAAC;AACXI,EAAAA,IAAI,EAAE;AACJC,IAAAA,QAAQ,EAAE;AADN,GADK;AAIXC,EAAAA,KAAK,EAAE;AACLC,IAAAA,OAAO,EAAEJ,KAAK,CAACK,OAAN,CAAc,CAAd,CADJ;AAELC,IAAAA,SAAS,EAAE,QAFN;AAGLC,IAAAA,KAAK,EAAEP,KAAK,CAACQ,OAAN,CAAcC,IAAd,CAAmBC;AAHrB;AAJI,CAAD,CADc,CAA5B;;AAaA,MAAMC,KAAe,GAAG,MAAM;AAC5B,QAAMC,OAAO,GAAGb,SAAS,EAAzB;AAEA,QAAMc,QAAQ,GAAGrB,WAAW,EAA5B;AACA,QAAMsB,KAAK,GAAGvB,WAAW,CAAEwB,KAAD,IAA2BA,KAAK,CAACD,KAAN,CAAYA,KAAxC,CAAzB;;AAEA,QAAME,QAAQ,GAAG,YAAY;AAC3BH,IAAAA,QAAQ,CAAClB,QAAQ,EAAC,MAAMF,kBAAkB,EAAzB,EAAT,CAAR;AACD,GAFD;;AAGA,QAAMwB,UAAU,GAAG,MAAOC,EAAP,IAAkC;AACnD,UAAMxB,oBAAoB,CAACwB,EAAD,CAA1B;AACAF,IAAAA,QAAQ;AACT,GAHD;;AAKA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACX,IAAxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE,MAAC,IAAD;AAAM,IAAA,SAAS,MAAf;AAAgB,IAAA,OAAO,EAAE,CAAzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,CADF,CADF;AASD,CAvBD;;AAyBAU,KAAK,CAACQ,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC3C,QAAMC,IAAI,GAAG,MAAM5B,kBAAkB,EAArC;AACA2B,EAAAA,KAAK,CAACP,QAAN,CAAelB,QAAQ,CAAC0B,IAAD,CAAvB;AACA,SAAO;AAAEA,IAAAA;AAAF,GAAP;AACD,CAJD;;AAMA,eAAeV,KAAf;AAEA","sourcesContent":["import Layout from '../components/MyLayout';\nimport { useSelector, RootStateOrAny, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { NextPage } from 'next';\nimport {\n  getPostFromServer,\n  getPostsFromServer,\n  removePostFromServer,\n} from '../api';\nimport { setPosts, setPost } from '../store/actions';\nimport { Post } from '../types';\nimport { makeStyles, createStyles, Theme } from '@material-ui/core/styles';\nimport Paper from '@material-ui/core/Paper';\nimport Grid from '@material-ui/core/Grid';\n\nconst useStyles = makeStyles((theme: Theme) =>\n  createStyles({\n    root: {\n      flexGrow: 1,\n    },\n    paper: {\n      padding: theme.spacing(2),\n      textAlign: 'center',\n      color: theme.palette.text.secondary,\n    },\n  }),\n);\n\nconst Index: NextPage = () => {\n  const classes = useStyles();\n\n  const dispatch = useDispatch();\n  const posts = useSelector((state: RootStateOrAny) => state.posts.posts);\n\n  const getPosts = async () => {\n    dispatch(setPosts(await getPostsFromServer()));\n  };\n  const removePost = async (id: number | undefined) => {\n    await removePostFromServer(id);\n    getPosts();\n  };\n\n  return (\n    <Layout>\n      <div className={classes.root}>\n        <Grid container spacing={3}>\n          \n        </Grid>\n      </div>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ store }) => {\n  const data = await getPostsFromServer();\n  store.dispatch(setPosts(data));\n  return { data };\n};\n\nexport default Index;\n\n/* {posts.map((post: Post) => (\n  <div key={post.id}>\n    <div>\n      <span onClick={() => removePost(post.id)}>{`delete`}</span>\n      <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n        <a\n          onClick={async () =>\n            dispatch(setPost(await getPostFromServer(post.id)))\n          }\n        >\n          {post.title}\n        </a>\n      </Link>\n      {post.body}\n    </div>\n  </div> */\n"]},"metadata":{},"sourceType":"module"}