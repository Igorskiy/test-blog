{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\test-blog\\\\pages\\\\index.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../components/MyLayout';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { getPostFromServer, getPostsFromServer, removePostFromServer } from '../api';\nimport { setPostsAction as _setPostsAction, setPost } from '../store/actions';\n\nvar Index = function Index() {\n  var dispatch = useDispatch();\n  var posts = useSelector(function (state) {\n    return state.posts.posts;\n  });\n\n  var getPosts = function getPosts() {\n    return _regeneratorRuntime.async(function getPosts$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.t0 = dispatch;\n            _context.t1 = _setPostsAction;\n            _context.next = 4;\n            return _regeneratorRuntime.awrap(getPostsFromServer());\n\n          case 4:\n            _context.t2 = _context.sent;\n            _context.t3 = (0, _context.t1)(_context.t2);\n            (0, _context.t0)(_context.t3);\n\n          case 7:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  var removePost = function removePost(id) {\n    return _regeneratorRuntime.async(function removePost$(_context2) {\n      while (1) {\n        switch (_context2.prev = _context2.next) {\n          case 0:\n            _context2.next = 2;\n            return _regeneratorRuntime.awrap(removePostFromServer(id));\n\n          case 2:\n            getPosts();\n\n          case 3:\n          case \"end\":\n            return _context2.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, __jsx(\"h1\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, \"Posts\"), __jsx(\"ul\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, posts.map(function (post) {\n    return __jsx(\"li\", {\n      key: post.id,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30\n      },\n      __self: this\n    }, __jsx(\"div\", {\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31\n      },\n      __self: this\n    }, __jsx(\"span\", {\n      onClick: function onClick() {\n        return removePost(post.id);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32\n      },\n      __self: this\n    }, \"delete\"), __jsx(Link, {\n      href: \"/posts/[id]\",\n      as: \"/posts/\".concat(post.id),\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 33\n      },\n      __self: this\n    }, __jsx(\"a\", {\n      onClick: function _callee() {\n        return _regeneratorRuntime.async(function _callee$(_context3) {\n          while (1) {\n            switch (_context3.prev = _context3.next) {\n              case 0:\n                _context3.t0 = dispatch;\n                _context3.t1 = setPost;\n                _context3.next = 4;\n                return _regeneratorRuntime.awrap(getPostFromServer(post.id));\n\n              case 4:\n                _context3.t2 = _context3.sent;\n                _context3.t3 = (0, _context3.t1)(_context3.t2);\n                return _context3.abrupt(\"return\", (0, _context3.t0)(_context3.t3));\n\n              case 7:\n              case \"end\":\n                return _context3.stop();\n            }\n          }\n        }, null, null, null, _Promise);\n      },\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 34\n      },\n      __self: this\n    }, post.title)), post.body));\n  })));\n};\n\nIndex.getInitialProps = function _callee2(_ref) {\n  var store, data;\n  return _regeneratorRuntime.async(function _callee2$(_context4) {\n    while (1) {\n      switch (_context4.prev = _context4.next) {\n        case 0:\n          store = _ref.store;\n          _context4.next = 3;\n          return _regeneratorRuntime.awrap(getPostsFromServer());\n\n        case 3:\n          data = _context4.sent;\n          store.dispatch(_setPostsAction(data));\n\n        case 5:\n        case \"end\":\n          return _context4.stop();\n      }\n    }\n  }, null, null, null, _Promise);\n};\n\nvar mapDispatchToProps = function mapDispatchToProps(dispatch) {\n  return {\n    setPostsAction: function setPostsAction(data) {\n      return dispatch(_setPostsAction(data));\n    }\n  };\n};\n\nexport default connIndex;","map":{"version":3,"sources":["C:/projects/test-blog/pages/index.tsx"],"names":["Layout","useSelector","useDispatch","Link","getPostFromServer","getPostsFromServer","removePostFromServer","setPostsAction","setPost","Index","dispatch","posts","state","getPosts","removePost","id","map","post","title","body","getInitialProps","store","data","mapDispatchToProps","connIndex"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,wBAAnB;AACA,SAASC,WAAT,EAAsCC,WAAtC,QAAyD,aAAzD;AACA,OAAOC,IAAP,MAAiB,WAAjB;AAEA,SACEC,iBADF,EAEEC,kBAFF,EAGEC,oBAHF,QAIO,QAJP;AAKA,SAASC,cAAc,IAAdA,eAAT,EAAyBC,OAAzB,QAAwC,kBAAxC;;AAGA,IAAMC,KAAe,GAAG,SAAlBA,KAAkB,GAAM;AAC5B,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,KAAK,GAAGV,WAAW,CAAC,UAACW,KAAD;AAAA,WAA2BA,KAAK,CAACD,KAAN,CAAYA,KAAvC;AAAA,GAAD,CAAzB;;AAEA,MAAME,QAAQ,GAAG,SAAXA,QAAW;AAAA;AAAA;AAAA;AAAA;AAAA,0BACfH,QADe;AAAA,0BACNH,eADM;AAAA;AAAA,6CACeF,kBAAkB,EADjC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAjB;;AAGA,MAAMS,UAAU,GAAG,SAAbA,UAAa,CAAOC,EAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACXT,oBAAoB,CAACS,EAAD,CADT;;AAAA;AAEjBF,YAAAA,QAAQ;;AAFS;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAKA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,aADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACGF,KAAK,CAACK,GAAN,CAAU,UAACC,IAAD;AAAA,WACT;AAAI,MAAA,GAAG,EAAEA,IAAI,CAACF,EAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AAAM,MAAA,OAAO,EAAE;AAAA,eAAMD,UAAU,CAACG,IAAI,CAACF,EAAN,CAAhB;AAAA,OAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,EAEE,MAAC,IAAD;AAAM,MAAA,IAAI,EAAC,aAAX;AAAyB,MAAA,EAAE,mBAAYE,IAAI,CAACF,EAAjB,CAA3B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OACE;AACE,MAAA,OAAO,EAAE;AAAA;AAAA;AAAA;AAAA;AAAA,+BACPL,QADO;AAAA,+BACEF,OADF;AAAA;AAAA,iDACgBJ,iBAAiB,CAACa,IAAI,CAACF,EAAN,CADjC;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAKGE,IAAI,CAACC,KALR,CADF,CAFF,EAWGD,IAAI,CAACE,IAXR,CADF,CADS;AAAA,GAAV,CADH,CAFF,CADF;AAwBD,CApCD;;AAsCAV,KAAK,CAACW,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,QAASA,KAAT;AAAA;AAAA,2CACHhB,kBAAkB,EADf;;AAAA;AAChBiB,UAAAA,IADgB;AAEtBD,UAAAA,KAAK,CAACX,QAAN,CAAeH,eAAc,CAACe,IAAD,CAA7B;;AAFsB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB;;AAKA,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACb,QAAD;AAAA,SAAoB;AAC7CH,IAAAA,cAAc,EAAE,wBAACe,IAAD;AAAA,aAAeZ,QAAQ,CAACH,eAAc,CAACe,IAAD,CAAf,CAAvB;AAAA;AAD6B,GAApB;AAAA,CAA3B;;AAIA,eAAeE,SAAf","sourcesContent":["import Layout from '../components/MyLayout';\nimport { useSelector, RootStateOrAny, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { NextPage } from 'next';\nimport {\n  getPostFromServer,\n  getPostsFromServer,\n  removePostFromServer,\n} from '../api';\nimport { setPostsAction, setPost } from '../store/actions';\nimport { Post } from '../types';\n\nconst Index: NextPage = () => {\n  const dispatch = useDispatch();\n  const posts = useSelector((state: RootStateOrAny) => state.posts.posts);\n\n  const getPosts = async () => {\n    dispatch(setPostsAction(await getPostsFromServer()));\n  };\n  const removePost = async (id: number | undefined) => {\n    await removePostFromServer(id);\n    getPosts();\n  };\n\n  return (\n    <Layout>\n      <h1>Posts</h1>\n      <ul>\n        {posts.map((post: Post) => (\n          <li key={post.id}>\n            <div>\n              <span onClick={() => removePost(post.id)}>{`delete`}</span>\n              <Link href=\"/posts/[id]\" as={`/posts/${post.id}`}>\n                <a\n                  onClick={async () =>\n                    dispatch(setPost(await getPostFromServer(post.id)))\n                  }\n                >\n                  {post.title}\n                </a>\n              </Link>\n              {post.body}\n            </div>\n          </li>\n        ))}\n      </ul>\n    </Layout>\n  );\n};\n\nIndex.getInitialProps = async ({ store }) => {\n  const data = await getPostsFromServer();\n  store.dispatch(setPostsAction(data));\n};\n\nconst mapDispatchToProps = (dispatch: any) => ({\n  setPostsAction: (data: any) => dispatch(setPostsAction(data)),\n});\n\nexport default connIndex;\n"]},"metadata":{},"sourceType":"module"}