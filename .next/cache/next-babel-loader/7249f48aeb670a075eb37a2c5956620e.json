{"ast":null,"code":"import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\nimport { postsReducer } from './postsReducer';\nimport { inputReducer } from './inputReducer';\nimport { commentReducer } from './commentReducer';\nexport var reducer = combineReducers({\n  posts: postsReducer,\n  inputs: inputReducer,\n  comment: commentReducer\n});\nvar reduxDevtools = true && true ? window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__() : function (f) {\n  return f;\n};\nvar enhancers = compose(applyMiddleware(thunk), reduxDevtools);\nexport var makeStore = function makeStore(initialState) {\n  return createStore(reducers, initialState, enhancers);\n};","map":{"version":3,"sources":["C:/projects/test-blog/store/index.ts"],"names":["combineReducers","createStore","applyMiddleware","compose","postsReducer","inputReducer","commentReducer","reducer","posts","inputs","comment","reduxDevtools","window","__REDUX_DEVTOOLS_EXTENSION__","f","enhancers","thunk","makeStore","initialState","reducers"],"mappings":"AAAA,SAASA,eAAT,EAA2BC,WAA3B,EAAwCC,eAAxC,EAAyDC,OAAzD,QAAyE,OAAzE;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,YAAT,QAA6B,gBAA7B;AACA,SAASC,cAAT,QAA+B,kBAA/B;AAEA,OAAO,IAAMC,OAAO,GAAGP,eAAe,CAAC;AACrCQ,EAAAA,KAAK,EAAEJ,YAD8B;AAErCK,EAAAA,MAAM,EAAEJ,YAF6B;AAGrCK,EAAAA,OAAO,EAAEJ;AAH4B,CAAD,CAA/B;AAMP,IAAMK,aAAa,GACjB,eACIC,MAAM,CAACC,4BAAP,IACAD,MAAM,CAACC,4BAAP,EAFJ,GAGI,UAAAC,CAAC;AAAA,SAAIA,CAAJ;AAAA,CAJP;AAMA,IAAMC,SAAS,GAAGZ,OAAO,CACvBD,eAAe,CAACc,KAAD,CADQ,EAEvBL,aAFuB,CAAzB;AAKA,OAAO,IAAMM,SAAS,GAAG,SAAZA,SAAY,CAAAC,YAAY,EAAI;AACvC,SAAOjB,WAAW,CAACkB,QAAD,EAAWD,YAAX,EAAyBH,SAAzB,CAAlB;AACD,CAFM","sourcesContent":["import { combineReducers,  createStore, applyMiddleware, compose  } from 'redux';\nimport { postsReducer } from './postsReducer';\nimport { inputReducer } from './inputReducer';\nimport { commentReducer } from './commentReducer';\n\nexport const reducer = combineReducers({\n  posts: postsReducer,\n  inputs: inputReducer,\n  comment: commentReducer,\n});\n\nconst reduxDevtools =\n  typeof window !== \"undefined\" && process.env.NODE_ENV !== \"production\"\n    ? window.__REDUX_DEVTOOLS_EXTENSION__ &&\n      window.__REDUX_DEVTOOLS_EXTENSION__()\n    : f => f;\n\nconst enhancers = compose(\n  applyMiddleware(thunk),\n  reduxDevtools\n);\n\nexport const makeStore = initialState => {\n  return createStore(reducers, initialState, enhancers);\n};"]},"metadata":{},"sourceType":"module"}