{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test-blog\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport { sendPostOnServer } from '../../api';\nimport { setPostTitle, setPostBody } from '../../store/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Link from 'next/link';\n\nconst New = () => {\n  const postsBody = useSelector(state => state.inputs.postBody);\n  const postsTitle = useSelector(state => state.inputs.postTitle);\n  const dispatch = useDispatch();\n\n  const addNewPost = async (title, body) => {\n    await sendPostOnServer(title, body);\n    dispatch(setPostBody(''));\n    dispatch(setPostTitle(''));\n    dispatch(ge);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 25\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 26\n    },\n    __self: this\n  }, \"name of the post\"), __jsx(\"input\", {\n    type: \"text\",\n    defaultValue: postsTitle,\n    placeholder: \"add name for your post\",\n    onChange: e => dispatch(setPostTitle(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33\n    },\n    __self: this\n  }, \"text\"), __jsx(\"textarea\", {\n    cols: 30,\n    rows: 5,\n    placeholder: \"what is in your mind?\",\n    defaultValue: postsBody,\n    onChange: e => dispatch(setPostBody(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 41\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    onClick: () => addNewPost(postsTitle, postsBody),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 42\n    },\n    __self: this\n  }, \"submit\")));\n};\n\nexport default New;","map":{"version":3,"sources":["C:/projects/test-blog/pages/posts/new.tsx"],"names":["Layout","sendPostOnServer","setPostTitle","setPostBody","useSelector","useDispatch","Link","New","postsBody","state","inputs","postBody","postsTitle","postTitle","dispatch","addNewPost","title","body","ge","e","target","value"],"mappings":";;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AAEA,SAASC,gBAAT,QAAiC,WAAjC;AACA,SAASC,YAAT,EAAuBC,WAAvB,QAA0C,qBAA1C;AACA,SAASC,WAAT,EAAsCC,WAAtC,QAAyD,aAAzD;AACA,OAAOC,IAAP,MAAiB,WAAjB;;AAEA,MAAMC,GAAa,GAAG,MAAM;AAC1B,QAAMC,SAAS,GAAGJ,WAAW,CAC1BK,KAAD,IAA2BA,KAAK,CAACC,MAAN,CAAaC,QADb,CAA7B;AAGA,QAAMC,UAAU,GAAGR,WAAW,CAC3BK,KAAD,IAA2BA,KAAK,CAACC,MAAN,CAAaG,SADZ,CAA9B;AAGA,QAAMC,QAAQ,GAAGT,WAAW,EAA5B;;AAEA,QAAMU,UAAU,GAAG,OAAOC,KAAP,EAAsBC,IAAtB,KAAuC;AACxD,UAAMhB,gBAAgB,CAACe,KAAD,EAAQC,IAAR,CAAtB;AACAH,IAAAA,QAAQ,CAACX,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAW,IAAAA,QAAQ,CAACZ,YAAY,CAAC,EAAD,CAAb,CAAR;AACAY,IAAAA,QAAQ,CAACI,EAAD,CAAR;AACD,GALD;;AAOA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,wBADF,EAEE;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,YAAY,EAAEN,UAFhB;AAGE,IAAA,WAAW,EAAC,wBAHd;AAIE,IAAA,QAAQ,EAAEO,CAAC,IAAIL,QAAQ,CAACZ,YAAY,CAACiB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAb,CAJzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,EAQE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,EASE;AACE,IAAA,IAAI,EAAE,EADR;AAEE,IAAA,IAAI,EAAE,CAFR;AAGE,IAAA,WAAW,EAAC,uBAHd;AAIE,IAAA,YAAY,EAAEb,SAJhB;AAKE,IAAA,QAAQ,EAAEW,CAAC,IAAIL,QAAQ,CAACX,WAAW,CAACgB,CAAC,CAACC,MAAF,CAASC,KAAV,CAAZ,CALzB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IATF,EAgBE,MAAC,IAAD;AAAM,IAAA,IAAI,EAAC,GAAX;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAM,IAAA,OAAO,EAAE,MAAMN,UAAU,CAACH,UAAD,EAAaJ,SAAb,CAA/B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cADF,CAhBF,CADF;AAsBD,CAtCD;;AAwCA,eAAeD,GAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport { NextPage } from 'next';\nimport { sendPostOnServer } from '../../api';\nimport { setPostTitle, setPostBody } from '../../store/actions';\nimport { useSelector, RootStateOrAny, useDispatch } from 'react-redux';\nimport Link from 'next/link';\n\nconst New: NextPage = () => {\n  const postsBody = useSelector(\n    (state: RootStateOrAny) => state.inputs.postBody,\n  );\n  const postsTitle = useSelector(\n    (state: RootStateOrAny) => state.inputs.postTitle,\n  );\n  const dispatch = useDispatch();\n\n  const addNewPost = async (title: string, body: string) => {\n    await sendPostOnServer(title, body);\n    dispatch(setPostBody(''));\n    dispatch(setPostTitle(''));\n    dispatch(ge)\n  };\n\n  return (\n    <Layout>\n      <p>name of the post</p>\n      <input\n        type=\"text\"\n        defaultValue={postsTitle}\n        placeholder=\"add name for your post\"\n        onChange={e => dispatch(setPostTitle(e.target.value))}\n      />\n      <p>text</p>\n      <textarea\n        cols={30}\n        rows={5}\n        placeholder=\"what is in your mind?\"\n        defaultValue={postsBody}\n        onChange={e => dispatch(setPostBody(e.target.value))}\n      />\n      <Link href=\"/\">\n        <span onClick={() => addNewPost(postsTitle, postsBody)}>submit</span>\n      </Link>\n    </Layout>\n  );\n};\n\nexport default New;\n"]},"metadata":{},"sourceType":"module"}