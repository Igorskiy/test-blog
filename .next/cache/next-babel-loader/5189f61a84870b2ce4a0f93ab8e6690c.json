{"ast":null,"code":"var _jsxFileName = \"C:\\\\projects\\\\test-blog\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport { sendPostOnServer, getPostsFromServer } from '../../api';\nimport { setPostTitle, setPostBody, setPosts } from '../../store/actions';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport TextField from '@material-ui/core/TextField';\n\nconst New = () => {\n  const postsBody = useSelector(state => state.inputs.postBody);\n  const postsTitle = useSelector(state => state.inputs.postTitle);\n  const dispatch = useDispatch();\n\n  const addNewPost = async (title, body) => {\n    await sendPostOnServer(title, body);\n    dispatch(setPostBody(''));\n    dispatch(setPostTitle(''));\n    dispatch(setPosts((await getPostsFromServer())));\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27\n    },\n    __self: this\n  }, __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  }, \"name of the post\"), __jsx(\"input\", {\n    type: \"text\",\n    defaultValue: postsTitle,\n    placeholder: \"add name for your post\",\n    onChange: e => dispatch(setPostTitle(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 29\n    },\n    __self: this\n  }), __jsx(\"p\", {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 35\n    },\n    __self: this\n  }, \"text\"), __jsx(\"textarea\", {\n    cols: 30,\n    rows: 5,\n    placeholder: \"what is in your mind?\",\n    defaultValue: postsBody,\n    onChange: e => dispatch(setPostBody(e.target.value)),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 36\n    },\n    __self: this\n  }), __jsx(Link, {\n    href: \"/\",\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43\n    },\n    __self: this\n  }, __jsx(\"span\", {\n    onClick: () => addNewPost(postsTitle, postsBody),\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 44\n    },\n    __self: this\n  }, \"submit\")));\n};\n\nexport default New;\n\n__jsx(\"form\", {\n  className: classes.root,\n  noValidate: true,\n  autoComplete: \"off\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 51\n  },\n  __self: this\n}, __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 52\n  },\n  __self: this\n}, __jsx(TextField, {\n  id: \"standard-multiline-flexible\",\n  label: \"Multiline\",\n  multiline: true,\n  rowsMax: \"4\",\n  value: value,\n  onChange: handleChange,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 53\n  },\n  __self: this\n}), __jsx(TextField, {\n  id: \"standard-textarea\",\n  label: \"Multiline Placeholder\",\n  placeholder: \"Placeholder\",\n  multiline: true,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 61\n  },\n  __self: this\n}), __jsx(TextField, {\n  id: \"standard-multiline-static\",\n  label: \"Multiline\",\n  multiline: true,\n  rows: \"4\",\n  defaultValue: \"Default Value\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 67\n  },\n  __self: this\n})), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 75\n  },\n  __self: this\n}, __jsx(TextField, {\n  id: \"filled-multiline-flexible\",\n  label: \"Multiline\",\n  multiline: true,\n  rowsMax: \"4\",\n  value: value,\n  onChange: handleChange,\n  variant: \"filled\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 76\n  },\n  __self: this\n}), __jsx(TextField, {\n  id: \"filled-textarea\",\n  label: \"Multiline Placeholder\",\n  placeholder: \"Placeholder\",\n  multiline: true,\n  variant: \"filled\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 85\n  },\n  __self: this\n}), __jsx(TextField, {\n  id: \"filled-multiline-static\",\n  label: \"Multiline\",\n  multiline: true,\n  rows: \"4\",\n  defaultValue: \"Default Value\",\n  variant: \"filled\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 92\n  },\n  __self: this\n})), __jsx(\"div\", {\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 101\n  },\n  __self: this\n}, __jsx(TextField, {\n  id: \"outlined-multiline-flexible\",\n  label: \"Multiline\",\n  multiline: true,\n  rowsMax: \"4\",\n  value: value,\n  onChange: handleChange,\n  variant: \"outlined\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 102\n  },\n  __self: this\n}), __jsx(TextField, {\n  id: \"outlined-textarea\",\n  label: \"Multiline Placeholder\",\n  placeholder: \"Placeholder\",\n  multiline: true,\n  variant: \"outlined\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 111\n  },\n  __self: this\n}), __jsx(TextField, {\n  id: \"outlined-multiline-static\",\n  label: \"Multiline\",\n  multiline: true,\n  rows: \"4\",\n  defaultValue: \"Default Value\",\n  variant: \"outlined\",\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 118\n  },\n  __self: this\n})));","map":{"version":3,"sources":["C:/projects/test-blog/pages/posts/new.tsx"],"names":["Layout","sendPostOnServer","getPostsFromServer","setPostTitle","setPostBody","setPosts","useSelector","useDispatch","Link","TextField","New","postsBody","state","inputs","postBody","postsTitle","postTitle","dispatch","addNewPost","title","body","e","target","value","classes","root","handleChange"],"mappings":"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","sourcesContent":["import Layout from '../../components/MyLayout';\nimport { NextPage } from 'next';\nimport { sendPostOnServer, getPostsFromServer } from '../../api';\nimport { setPostTitle, setPostBody, setPosts } from '../../store/actions';\nimport { useSelector, RootStateOrAny, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\n\nconst New: NextPage = () => {\n  const postsBody = useSelector(\n    (state: RootStateOrAny) => state.inputs.postBody,\n  );\n  const postsTitle = useSelector(\n    (state: RootStateOrAny) => state.inputs.postTitle,\n  );\n  const dispatch = useDispatch();\n\n  const addNewPost = async (title: string, body: string) => {\n    await sendPostOnServer(title, body);\n    dispatch(setPostBody(''));\n    dispatch(setPostTitle(''));\n    dispatch(setPosts(await getPostsFromServer()));\n  };\n\n  return (\n    <Layout>\n      <p>name of the post</p>\n      <input\n        type=\"text\"\n        defaultValue={postsTitle}\n        placeholder=\"add name for your post\"\n        onChange={e => dispatch(setPostTitle(e.target.value))}\n      />\n      <p>text</p>\n      <textarea\n        cols={30}\n        rows={5}\n        placeholder=\"what is in your mind?\"\n        defaultValue={postsBody}\n        onChange={e => dispatch(setPostBody(e.target.value))}\n      />\n      <Link href=\"/\">\n        <span onClick={() => addNewPost(postsTitle, postsBody)}>submit</span>\n      </Link>\n    </Layout>\n  );\n};\n\nexport default New;\n<form className={classes.root} noValidate autoComplete=\"off\">\n<div>\n  <TextField\n    id=\"standard-multiline-flexible\"\n    label=\"Multiline\"\n    multiline\n    rowsMax=\"4\"\n    value={value}\n    onChange={handleChange}\n  />\n  <TextField\n    id=\"standard-textarea\"\n    label=\"Multiline Placeholder\"\n    placeholder=\"Placeholder\"\n    multiline\n  />\n  <TextField\n    id=\"standard-multiline-static\"\n    label=\"Multiline\"\n    multiline\n    rows=\"4\"\n    defaultValue=\"Default Value\"\n  />\n</div>\n<div>\n  <TextField\n    id=\"filled-multiline-flexible\"\n    label=\"Multiline\"\n    multiline\n    rowsMax=\"4\"\n    value={value}\n    onChange={handleChange}\n    variant=\"filled\"\n  />\n  <TextField\n    id=\"filled-textarea\"\n    label=\"Multiline Placeholder\"\n    placeholder=\"Placeholder\"\n    multiline\n    variant=\"filled\"\n  />\n  <TextField\n    id=\"filled-multiline-static\"\n    label=\"Multiline\"\n    multiline\n    rows=\"4\"\n    defaultValue=\"Default Value\"\n    variant=\"filled\"\n  />\n</div>\n<div>\n  <TextField\n    id=\"outlined-multiline-flexible\"\n    label=\"Multiline\"\n    multiline\n    rowsMax=\"4\"\n    value={value}\n    onChange={handleChange}\n    variant=\"outlined\"\n  />\n  <TextField\n    id=\"outlined-textarea\"\n    label=\"Multiline Placeholder\"\n    placeholder=\"Placeholder\"\n    multiline\n    variant=\"outlined\"\n  />\n  <TextField\n    id=\"outlined-multiline-static\"\n    label=\"Multiline\"\n    multiline\n    rows=\"4\"\n    defaultValue=\"Default Value\"\n    variant=\"outlined\"\n  />\n</div>\n</form>"]},"metadata":{},"sourceType":"module"}