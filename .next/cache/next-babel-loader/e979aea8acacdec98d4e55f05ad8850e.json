{"ast":null,"code":"import _Promise from \"@babel/runtime-corejs2/core-js/promise\";\nimport _regeneratorRuntime from \"@babel/runtime-corejs2/regenerator\";\nvar _jsxFileName = \"C:\\\\projects\\\\test-blog\\\\pages\\\\posts\\\\new.tsx\";\nimport React from \"react\";\nvar __jsx = React.createElement;\nimport Layout from '../../components/MyLayout';\nimport { sendPostOnServer, getPostsFromServer } from '../../api';\nimport { setPostTitle, setPostBody, setPosts } from '../../store/actions';\nimport { useSelector, useDispatch } from 'react-redux';\n\nvar New = function New() {\n  var postsBody = useSelector(function (state) {\n    return state.inputs.postBody;\n  });\n  var postsTitle = useSelector(function (state) {\n    return state.inputs.postTitle;\n  });\n  var dispatch = useDispatch();\n\n  var addNewPost = function addNewPost(title, body) {\n    return _regeneratorRuntime.async(function addNewPost$(_context) {\n      while (1) {\n        switch (_context.prev = _context.next) {\n          case 0:\n            _context.next = 2;\n            return _regeneratorRuntime.awrap(sendPostOnServer(title, body));\n\n          case 2:\n            dispatch(setPostBody(''));\n            dispatch(setPostTitle(''));\n            _context.t0 = dispatch;\n            _context.t1 = setPosts;\n            _context.next = 8;\n            return _regeneratorRuntime.awrap(getPostsFromServer());\n\n          case 8:\n            _context.t2 = _context.sent;\n            _context.t3 = (0, _context.t1)(_context.t2);\n            (0, _context.t0)(_context.t3);\n\n          case 11:\n          case \"end\":\n            return _context.stop();\n        }\n      }\n    }, null, null, null, _Promise);\n  };\n\n  return __jsx(Layout, {\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 28\n    },\n    __self: this\n  });\n};\n\nexport default New;","map":{"version":3,"sources":["C:/projects/test-blog/pages/posts/new.tsx"],"names":["Layout","sendPostOnServer","getPostsFromServer","setPostTitle","setPostBody","setPosts","useSelector","useDispatch","New","postsBody","state","inputs","postBody","postsTitle","postTitle","dispatch","addNewPost","title","body"],"mappings":";;;;;AAAA,OAAOA,MAAP,MAAmB,2BAAnB;AAEA,SAASC,gBAAT,EAA2BC,kBAA3B,QAAqD,WAArD;AACA,SAASC,YAAT,EAAuBC,WAAvB,EAAoCC,QAApC,QAAoD,qBAApD;AACA,SAASC,WAAT,EAAsCC,WAAtC,QAAyD,aAAzD;;AAMA,IAAMC,GAAa,GAAG,SAAhBA,GAAgB,GAAM;AAC1B,MAAMC,SAAS,GAAGH,WAAW,CAC3B,UAACI,KAAD;AAAA,WAA2BA,KAAK,CAACC,MAAN,CAAaC,QAAxC;AAAA,GAD2B,CAA7B;AAGA,MAAMC,UAAU,GAAGP,WAAW,CAC5B,UAACI,KAAD;AAAA,WAA2BA,KAAK,CAACC,MAAN,CAAaG,SAAxC;AAAA,GAD4B,CAA9B;AAGA,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;;AAEA,MAAMS,UAAU,GAAG,SAAbA,UAAa,CAAOC,KAAP,EAAsBC,IAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,6CACXjB,gBAAgB,CAACgB,KAAD,EAAQC,IAAR,CADL;;AAAA;AAEjBH,YAAAA,QAAQ,CAACX,WAAW,CAAC,EAAD,CAAZ,CAAR;AACAW,YAAAA,QAAQ,CAACZ,YAAY,CAAC,EAAD,CAAb,CAAR;AAHiB,0BAIjBY,QAJiB;AAAA,0BAIRV,QAJQ;AAAA;AAAA,6CAIOH,kBAAkB,EAJzB;;AAAA;AAAA;AAAA;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAnB;;AAOA,SACE,MAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF;AAKD,CArBD;;AAuBA,eAAeM,GAAf","sourcesContent":["import Layout from '../../components/MyLayout';\nimport { NextPage } from 'next';\nimport { sendPostOnServer, getPostsFromServer } from '../../api';\nimport { setPostTitle, setPostBody, setPosts } from '../../store/actions';\nimport { useSelector, RootStateOrAny, useDispatch } from 'react-redux';\nimport Link from 'next/link';\nimport { createStyles, makeStyles, Theme } from '@material-ui/core/styles';\nimport TextField from '@material-ui/core/TextField';\nimport { Button } from '@material-ui/core';\n\nconst New: NextPage = () => {\n  const postsBody = useSelector(\n    (state: RootStateOrAny) => state.inputs.postBody,\n  );\n  const postsTitle = useSelector(\n    (state: RootStateOrAny) => state.inputs.postTitle,\n  );\n  const dispatch = useDispatch();\n\n  const addNewPost = async (title: string, body: string) => {\n    await sendPostOnServer(title, body);\n    dispatch(setPostBody(''));\n    dispatch(setPostTitle(''));\n    dispatch(setPosts(await getPostsFromServer()));\n  };\n\n  return (\n    <Layout>\n\n    </Layout>\n  );\n};\n\nexport default New;\n"]},"metadata":{},"sourceType":"module"}