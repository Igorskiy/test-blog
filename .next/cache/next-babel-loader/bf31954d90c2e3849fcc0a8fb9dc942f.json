{"ast":null,"code":"import axios from 'axios';\nimport { setPostsAction } from './store/actions';\nexport const baseURL = 'https://simple-blog-api.crew.red';\nexport const api = axios.create({\n  baseURL,\n  timeout: 1000,\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8'\n  }\n});\nexport const getPostFromServer = async postId => {\n  const data = await api.get(baseURL + '/posts/' + postId + '?_embed=comments').then(({\n    data\n  }) => data);\n  return data;\n};\nexport const sendCommentOnServer = async (postId, commentBody) => {\n  await api.post(baseURL + '/comments', {\n    postId,\n    body: commentBody\n  });\n};\nexport const sendPostOnServer = async (title, body) => {\n  await api.post(baseURL + '/posts', {\n    title,\n    body\n  });\n};\nexport const getPostsFromServer = async () => {\n  const data = await api.get(baseURL + '/posts').then(({\n    data\n  }) => data);\n  return data;\n};\nexport const removePostFromServer = async id => {\n  await api.delete(baseURL + '/posts/' + id);\n};\nexport const test = () => dispatch => api.get(baseURL + '/posts').then(({\n  data\n}) => data).then(posts => dispatch(setPostsAction));","map":{"version":3,"sources":["C:/projects/test-blog/api.ts"],"names":["axios","setPostsAction","baseURL","api","create","timeout","headers","getPostFromServer","postId","data","get","then","sendCommentOnServer","commentBody","post","body","sendPostOnServer","title","getPostsFromServer","removePostFromServer","id","delete","test","dispatch","posts"],"mappings":"AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,cAAT,QAA+B,iBAA/B;AACA,OAAO,MAAMC,OAAO,GAAG,kCAAhB;AAEP,OAAO,MAAMC,GAAG,GAAGH,KAAK,CAACI,MAAN,CAAa;AAC9BF,EAAAA,OAD8B;AAE9BG,EAAAA,OAAO,EAAE,IAFqB;AAG9BC,EAAAA,OAAO,EAAE;AACP,oBAAgB;AADT;AAHqB,CAAb,CAAZ;AAQP,OAAO,MAAMC,iBAAiB,GAAG,MAAOC,MAAP,IAAsC;AACrE,QAAMC,IAAI,GAAG,MAAMN,GAAG,CACnBO,GADgB,CACZR,OAAO,GAAG,SAAV,GAAsBM,MAAtB,GAA+B,kBADnB,EAEhBG,IAFgB,CAEX,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAcA,IAFH,CAAnB;AAGA,SAAOA,IAAP;AACD,CALM;AAOP,OAAO,MAAMG,mBAAmB,GAAG,OACjCJ,MADiC,EAEjCK,WAFiC,KAG9B;AACH,QAAMV,GAAG,CAACW,IAAJ,CAASZ,OAAO,GAAG,WAAnB,EAAgC;AAAEM,IAAAA,MAAF;AAAUO,IAAAA,IAAI,EAAEF;AAAhB,GAAhC,CAAN;AACD,CALM;AAMP,OAAO,MAAMG,gBAAgB,GAAG,OAAOC,KAAP,EAAsBF,IAAtB,KAAuC;AACrE,QAAMZ,GAAG,CAACW,IAAJ,CAASZ,OAAO,GAAG,QAAnB,EAA6B;AAAEe,IAAAA,KAAF;AAASF,IAAAA;AAAT,GAA7B,CAAN;AACD,CAFM;AAIP,OAAO,MAAMG,kBAAkB,GAAG,YAAY;AAC5C,QAAMT,IAAI,GAAG,MAAMN,GAAG,CAACO,GAAJ,CAAQR,OAAO,GAAG,QAAlB,EAA4BS,IAA5B,CAAiC,CAAC;AAAEF,IAAAA;AAAF,GAAD,KAAcA,IAA/C,CAAnB;AACA,SAAOA,IAAP;AACD,CAHM;AAKP,OAAO,MAAMU,oBAAoB,GAAG,MAAOC,EAAP,IAAkC;AACpE,QAAMjB,GAAG,CAACkB,MAAJ,CAAWnB,OAAO,GAAG,SAAV,GAAsBkB,EAAjC,CAAN;AACD,CAFM;AAGP,OAAO,MAAME,IAAI,GAAG,MAClBC,QAAQ,IAAKpB,GAAG,CAACO,GAAJ,CAAQR,OAAO,GAAG,QAAlB,EAA4BS,IAA5B,CAAiC,CAAC;AAAEF,EAAAA;AAAF,CAAD,KAAcA,IAA/C,EAAqDE,IAArD,CAA0Da,KAAK,IAAID,QAAQ,CAACtB,cAAD,CAA3E,CADR","sourcesContent":["import axios from 'axios';\nimport { setPostsAction } from './store/actions';\nexport const baseURL = 'https://simple-blog-api.crew.red';\n\nexport const api = axios.create({\n  baseURL,\n  timeout: 1000,\n  headers: {\n    'Content-Type': 'application/json; charset=utf-8',\n  },\n});\n\nexport const getPostFromServer = async (postId: number | undefined) => {\n  const data = await api\n    .get(baseURL + '/posts/' + postId + '?_embed=comments')\n    .then(({ data }) => data);\n  return data;\n};\n\nexport const sendCommentOnServer = async (\n  postId: number | undefined,\n  commentBody: string,\n) => {\n  await api.post(baseURL + '/comments', { postId, body: commentBody });\n};\nexport const sendPostOnServer = async (title: string, body: string) => {\n  await api.post(baseURL + '/posts', { title, body });\n};\n\nexport const getPostsFromServer = async () => {\n  const data = await api.get(baseURL + '/posts').then(({ data }) => data);\n  return data;\n};\n\nexport const removePostFromServer = async (id: number | undefined) => {\n  await api.delete(baseURL + '/posts/' + id);\n};\nexport const test = () =>(\n  dispatch =>  api.get(baseURL + '/posts').then(({ data }) => data).then(posts => dispatch(setPostsAction))\n)"]},"metadata":{},"sourceType":"module"}